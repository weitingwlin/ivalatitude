mylist$mydata$bar
Sys.time()
production <- read.table("http://www.stat.tamu.edu/~sheather/book/docs/datasets/production.txt",
header=T,
sep="")
plot(RunTime ~ RunSize)
production
plot(production$RunTime ~ production$RunSize)
plot(production$RunTime , production$RunSize)
plot(production$RunTime ~ production$RunSize)
plot(production$RunTime , production$RunSize)
plot(production$RunTime ~ production$RunSize)
production.lm <- lm(RunTime ~ RunSize ,
data=production)
summary(production.lm)
anova(production.lm)
pred_production <- predict(production.lm , interval="confidence")
pred_production
plot(production$RunSize, pred_production$fit)
plot(production$RunSize, pred_production[1,])
plot(production$RunSize, pred_production[,1])
# examples
# examples
x <- list(a = c(1,2,3,4), b = rnorm (10))
x
lapply(x, mean)
lapply(x, length)
y <- list( A = runif(1,0,1), B = runif(2,0,2), C = runif(3,0,3))
y
lapply(y, function(Z) Z[length(Z)])
xmean <- lapply(x, mean)
class(xmean)
lapply(y, function(N) max(N)/2)
lapply(y, function(N) max(N)/min(N))
x$a
x$a[3] = NaN
x$a
xmean <- lapply(x, mean)
xmean
lapply(x, mean, na.rm = TRUE)
lapply(x, mean)
is.nan(Na)
is.nan(NA)
is.na(NaN)
T <- list(1,2,3,4)
Q <- lapply(T, runif, min = 0, max = 10 )
Q
Q$1
Q$[1]
Q[1]
sapply(y, function(Z) Z[length(Z)])
A<-sapply(y, function(Z) Z[length(Z)])
class(A)
is.vector(A)
sapply(y, function(Z) Z[c(1,length(Z))])
lapply(1:3/3,round, digit=3)
round(1/3, digit=2)
sapply(1:3, function(x) x^2)
lapply(1:3, function(x) x^2)
sapply(1:3, function(x) x^2)
sapply(1:3, function(x) c(x^2 x^3)
sapply(1:3, function(x) c(x^2 x^3))
sapply(1:3, function(x) c(x^2, x^3))
sapply(1:3, function(x) c(x^2, x^3))
is.matrix(sapply(1:3, function(x) c(x^2, x^3)))
sapply(1:3, function(x) seq(1, length(3), by = 0.5))
sapply(1:3, function(x) seq(1, length(x), by = 0.5))
sapply(1:3, function(x) seq(1, length(x))
)
sapply(1:3, function(x) seq(1, x
)
)
sapply(1:3, function(x) seq(1, x, by = 0.5)
)
library(datasets)
library(ggplot2) # used in making pretty plots
# Check the [document of ToothGrowth data](https://stat.ethz.ch/R-manual/R-devel/library/datasets/html/ToothGrowth.html)
# exploratory data analysis
data(ToothGrowth)
str(ToothGrowth)
head(ToothGrowth,3)
tail(ToothGrowth,3)
avg <- aggregate(len~.,data=ToothGrowth,mean)
avg
g <- ggplot(aes(x=dose, y = len), data = ToothGrowth) +
geom_point(aes(color = supp))
g <- g + geom_line(data=avg,aes(group=supp,colour=supp))
print(g)
summary(ToothGrowth)
TG_summary <- ddply(ToothGrowth,.(dose, supp), summarize, mean = mean(len), sd = sd(len))
TG_summary
TG_summary <- ddply(ToothGrowth,.(dose, supp), summarize, mean = mean(len), sd = sd(len))
library(plyr)
TG_summary <- ddply(ToothGrowth,.(dose, supp), summarize, mean = mean(len), sd = sd(len))
TG_summary
is.factor(TG_summary$dose)
as.factor(TG_summary$dose)
g <- ggplot(aes(x=dose, y = len), data = ToothGrowth) +
geom_point(aes(color = supp))
g <- g + geom_line(data=avg,aes(group=supp,colour=supp))
print(g)
ggplot(aes(x = supp, y = len), data = ToothGrowth) +
geom_boxplot(aes(fill = supp))
ggplot(aes(x = supp, y = len), data = ToothGrowth) +
geom_boxplot(aes(fill = supp)) + facet_wrap(~ dose)
p <- ggplot(ToothGrowth, aes(factor(dose), len))
p+geom_boxplot()+facet_grid(.~supp)+labs(title = "plot1")
OJA <- ToothGrowth$len[ToothGrowth$supp == 'OJ' & ToothGrowth$dose == 2] # subset of the data
VCA <- ToothGrowth$len[ToothGrowth$supp == 'VC' & ToothGrowth$dose == 2]
tA <- t.test(OJA, VCA, alternative = "two.sided", paired = FALSE, var.equal = FALSE)
OJA <- ToothGrowth$len[ToothGrowth$supp == 'OJ' & ToothGrowth$dose == 2] # subset of the data
VCA <- ToothGrowth$len[ToothGrowth$supp == 'VC' & ToothGrowth$dose == 2]
tA <- t.test(OJA, VCA, alternative = "two.sided", paired = FALSE, var.equal = FALSE)
tA
OJB = ToothGrowth$len[ToothGrowth$supp == 'OJ' & ToothGrowth$dose == 1]
VCB = ToothGrowth$len[ToothGrowth$supp == 'VC' & ToothGrowth$dose == 1]
tB <- t.test(OJB, VCB, alternative = "two.sided", paired = FALSE, var.equal = FALSE, conf.level = 0.95)
tB$p.value
OJC = ToothGrowth$len[ToothGrowth$supp == 'OJ' & ToothGrowth$dose == 0.5]
VCC = ToothGrowth$len[ToothGrowth$supp == 'VC' & ToothGrowth$dose == 0.5]
tC <- t.test(OJC, VCC, alternative = "two.sided", paired = FALSE, var.equal = FALSE, conf.level = 0.95)
tC$p.value
p.adjust(pvalues, method="BH")
# correction about testing multiple hypothesis
pvalues <-c(tA$p.value, tB$p.value, tC$p.value)
p.adjust(pvalues, method="BH")
qplot(ToothGrowth$len)
qplot(len,
data = ToothGrowth,
facets = supp~.,
binwidth = 2)
qplot(len,
data = ToothGrowth,
facets = supp~., facets = . ~ dose,
binwidth = 2)
# 4. State your conclusions and the assumptions needed for your conclusions.
qplot(len,
data = ToothGrowth,
facets = supp~dose,
binwidth = 2)
qplot(ToothGrowth$len)
t.test(len~supp, data = dose_0.5, two.sided = TRUE, paired = FALSE, var.equal = FALSE)
# setwd("C:/Users/Wei-Ting/Dropbox/DataCoding/my_R/package/vennchart/rfiles")
rm(list =ls())
co_A <- 10
co_B <- 12
co_C <- 3
co_AB <- 1.9
co_BC <- 0.5
co_AC <-1
library(devtools)
install_github("vennchart", "weitingwlin")
# install("C:/Users/Wei-Ting/Dropbox/DataCoding/my_R/package/vennchart")
library(vennchart)
library(devtools)
install_github("vennchart", "weitingwlin")
# install("C:/Users/Wei-Ting/Dropbox/DataCoding/my_R/package/vennchart")
#library(vennchart)
library(devtools)
install_github("vennchart", "weitingwlin")
# install("C:/Users/Wei-Ting/Dropbox/DataCoding/my_R/package/vennchart")
#library(vennchart)
install.packages("devtools")
# library(devtools)
# install_github("vennchart", "weitingwlin")
# install("C:/Users/Wei-Ting/Dropbox/DataCoding/my_R/package/vennchart")
#library(vennchart)
# install.packages("devtools")
library(devtools)
# install_github("vennchart", "weitingwlin")
# install("C:/Users/Wei-Ting/Dropbox/DataCoding/my_R/package/vennchart")
#library(vennchart)
# install.packages("devtools")
library(devtools)
install_github("vennchart", "weitingwlin")
# install("C:/Users/Wei-Ting/Dropbox/DataCoding/my_R/package/vennchart")
#library(vennchart)
# install.packages("devtools")
library(devtools)
# install_github("vennchart", "weitingwlin")
# install("C:/Users/Wei-Ting/Dropbox/DataCoding/my_R/package/vennchart")
library(vennchart)
#source("sourceAll.R")
Q <- vennChart(A_all = co_A, B_all = co_B, C_all = co_C,
AandB = co_AB, AandC = co_AC, BandC = co_BC)
#source("sourceAll.R")
Q <- vennChart(A_all = co_A, B_all = co_B, C_all = co_C,
AandB = co_AB, AandC = co_AC, BandC = co_BC)
# source("plotvenn.R")
# source("plotvenntexts.R")
# source("sourceAll.R")
plotVenn(Q$circles)
plotVennTexts(Q$textspos, unit = "%)", connect = ":\n(")
title(main = "Big title")
# setwd("C:/Users/Wei-Ting/Dropbox/DataCoding/my_R/package/vennchart/rfiles")
rm(list =ls())
co_A <- 10
co_B <- 12
co_C <- 3
co_AB <- 1.9
co_BC <- 0.5
co_AC <-1
#source("sourceAll.R")
Q <- vennChart(A_all = co_A, B_all = co_B, C_all = co_C,
AandB = co_AB, AandC = co_AC, BandC = co_BC)
# install.packages("devtools")
library(devtools)
# install_github("vennchart", "weitingwlin")
# install("C:/Users/Wei-Ting/Dropbox/DataCoding/my_R/package/vennchart")
library(vennchart)
#source("sourceAll.R")
Q <- vennChart(A_all = co_A, B_all = co_B, C_all = co_C,
AandB = co_AB, AandC = co_AC, BandC = co_BC)
#source("sourceAll.R")
Q <- vennChart(A_all = co_A, B_all = co_B, C_all = co_C,
AandB = co_AB, AandC = co_AC, BandC = co_BC,
colors = c(rbg(0.145, 0.51, 0.71, 0.5),
rgb(1, 0.78, 0.16, 0.5),
rgb(1, 0.32, 0.16.0.5)))
#source("sourceAll.R")
Q <- vennChart(A_all = co_A, B_all = co_B, C_all = co_C,
AandB = co_AB, AandC = co_AC, BandC = co_BC,
colors = c(rbg(0.145, 0.51, 0.71, 0.5),
rgb(1, 0.78, 0.16, 0.5),
rgb(1, 0.32, 0.16,0.5)))
#source("sourceAll.R")
Q <- vennChart(A_all = co_A, B_all = co_B, C_all = co_C,
AandB = co_AB, AandC = co_AC, BandC = co_BC,
colors = list(rbg(0.145, 0.51, 0.71, 0.5),
rgb(1, 0.78, 0.16, 0.5),
rgb(1, 0.32, 0.16, 0.5)))
colors = list(rbg(0.145, 0.51, 0.71, 0.5),
rgb(1, 0.78, 0.16, 0.5),
rgb(1, 0.32, 0.16, 0.5))
#source("sourceAll.R")
Q <- vennChart(A_all = co_A, B_all = co_B, C_all = co_C,
AandB = co_AB, AandC = co_AC, BandC = co_BC,
colors = list(rgb(0.145, 0.51, 0.71, 0.5),
rgb(1, 0.78, 0.16, 0.5),
rgb(1, 0.32, 0.16, 0.5))
)
#source("sourceAll.R")
Q <- vennChart(A_all = co_A, B_all = co_B, C_all = co_C,
AandB = co_AB, AandC = co_AC, BandC = co_BC)
#source("sourceAll.R")
Q <- vennChart(A_all = co_A, B_all = co_B, C_all = co_C,
AandB = co_AB, AandC = co_AC, BandC = co_BC,
colors = list(rgb(0.145, 0.51, 0.71, 0.6),
rgb(1, 0.78, 0.16, 0.6),
rgb(1, 0.32, 0.16, 0.6))
)
setwd("~/Dropbox/PhD_projects/iva_latitude/code_rfiles")
rm(list = ls()) # clean work space
# use ``Ctrl + L` to clean console
#   install.packages("vegan")
library("vegan")
source("loadData.R")
head(Xs_ST,2)
head(Xs_PL,2)
mod_tPL <- varpart(Yt_PL, ~ ., Xs_PL$Latitude, Xs_PL$Month , data = Xe_PL, transfo="log")
# ^^^ using all data in `Xe_PL`
mod_gPL <- varpart(Yg_PL, ~ ., Xs_PL$Latitude, Xs_PL$Month , data=Xe_PL, transfo="log")
mod_tST <- varpart(Yt_ST, ~ ., Xs_ST$Latitude, Xs_ST$Month , data=Xe_ST, transfo="log")
mod_gST <- varpart(Yg_ST, ~ ., Xs_ST$Latitude, Xs_ST$Month , data=Xe_ST, transfo="log")
mod_gST
par(mfrow = c (1,2))
p1 <- plot(mod_tPL,
bg = c("hotpink","skyblue", "burlywood"),
Xnames=c('Plant', 'Latitude','Month'))
title(main= 'Taxon-based, plant scale' )
p2 <- plot(mod_gPL,
bg = c("hotpink","skyblue", "burlywood"),
Xnames=c('Plant', 'Latitude','Month'))
title(main= 'Guild-based, plant scale' )
par(mfrow = c (1,2))
p3 <- plot(mod_tST,
bg = c("hotpink","skyblue", "burlywood"),
Xnames=c('Plant','Latitude','Month'))
title(main= 'Taxon-based, site scale' )
p4 <- plot(mod_gST,
bg = c("hotpink","skyblue", "burlywood"),
Xnames=c('Plant', 'Latitude','Month'))
title(main= 'Guild-based, site scale' )
library(devtools)
install_github("weitingwlin/vennchart")
library(vennchart)
valueParse <-function(mod)  {
a <-   mod$part$indfract$Adj.R.square
#  showvarparts(3)
A <- a[1] + a[4] + a[6] + a[7] # a + d + f + g
B <- a[2] + a[4] + a[5] + a[7] # b + d + e + g
C <- a[3] + a[5] + a[6] + a[7] # c + e + f + g
AB <- a[4] + a[7] # d + g
AC <- a[6] + a[7] # f + g
BC <- a[5] + a[7] # e + g
ABC <- a[7]
res <- a[8]
out <- list("A" = A, "B" = B, "C" = C,
"AB" = AB, "AC" = AC, "BC"= BC,
"res" = res)
return(out)
}
par(mfrow = c (1,2))
X <- valueParse(mod_tST)
L <- list("xlim" = c(-5,5), "ylim" = c(-6, 4))
Q1 <-  vennChart(A_all = X$A * 100, B_all = X$B * 100, C_all = X$C * 100,
AandB = X$AB * 100, AandC = X$AC * 100, BandC = X$BC * 100,
names = c('Env.','Lat.', 'Mon.'),
textadj = c(1.3,0), cex = 1.2, lim = L,
unit = "%", digits = 2)
text(0, -5.8,
paste("Residual: ", as.character(round(X$res * 100, 2)) , "%"),
cex = 1.2)
title("Taxon-based \n Site scale")
X <- valueParse(mod_gST)
X[X<0]<-0
Q2 <-  vennChart(A_all = X$A * 100, B_all = X$B * 100, C_all = X$C * 100,
AandB = X$AB * 100, AandC = X$AC * 100, BandC = X$BC * 100,
names = c('Env.','Lat.', 'Mon.'),
textadj = c(1.3,0.2), cex = 1.2, lim = L,
unit = "%", digits = 2)
text(0, -5.8,
paste("Residual: ", as.character(round(X$res * 100, 2)) , "%"),
cex = 1.2)
title("Guild-based \n Site scale")
Q3 <-  vennChart(A_all = X$A * 100, B_all = X$B * 100, C_all = X$C * 100,
AandB = X$AB * 100, AandC = X$AC * 100, BandC = X$BC * 100,
digits = 2, textadj = c(1.7, 0.4), lim = L,texts = FALSE)
par(mfrow = c (1,2))
X <- valueParse(mod_tPL)
Q3 <-  vennChart(A_all = X$A * 100, B_all = X$B * 100, C_all = X$C * 100,
AandB = X$AB * 100, AandC = X$AC * 100, BandC = X$BC * 100,
digits = 2, textadj = c(1.7, 0.4), lim = L,texts = FALSE)
Q3$textspos$tpBC[2] <- Q3$textspos$tpBC[2] - 1
Q3$textspos$tpAB[1] <- Q3$textspos$tpAB[1] + 0.5
plotVennTexts(Q3$textspos, names = c('Env.','Lat.', 'Mon.'), digits = 2,
cex = 1.2, unit = "%")
text(0, -5.8,
paste("Residual: ", as.character(round(X$res * 100, 2)) , "%"),
cex = 1.2)
title("Taxon-based \n Plant scale")
X <- valueParse(mod_gPL)
X[X<0]<-0
Q4 <-  vennChart(A_all = X$A * 100, B_all = X$B * 100, C_all = X$C * 100,
AandB = X$AB * 100, AandC = X$AC * 100, BandC = X$BC * 100,
lim = L,textadj = c(1.5,0.4), texts = FALSE)
# print the texts separately for more control
Q4$textspos$tpBC[2] <- Q4$textspos$tpBC[2] - 1
plotVennTexts(Q4$textspos, names = c('Env.','Lat.', 'Mon.'), digits = 2,
cex = 1.2, unit = "%")
text(0, -5.8,
paste("Residual: ", as.character(round(X$res * 100, 2)) , "%"),
cex = 1.2)
title("Guild-based \n Plant scale")
par(mfrow = c (1,2))
X <- valueParse(mod_tPL)
Q3 <-  vennChart(A_all = X$A * 100, B_all = X$B * 100, C_all = X$C * 100,
AandB = X$AB * 100, AandC = X$AC * 100, BandC = X$BC * 100,
digits = 2, textadj = c(1.7, 0.4), lim = L,texts = FALSE)
Q3$textspos$tpBC[2] <- Q3$textspos$tpBC[2] - 1
Q3$textspos$tpAB[1] <- Q3$textspos$tpAB[1] + 0.5
Q3$textspos$tpAB[2] <- Q3$textspos$tpAB[2] + 0.5
plotVennTexts(Q3$textspos, names = c('Env.','Lat.', 'Mon.'), digits = 2,
cex = 1.2, unit = "%")
text(0, -5.8,
paste("Residual: ", as.character(round(X$res * 100, 2)) , "%"),
cex = 1.2)
title("Taxon-based \n Plant scale")
X <- valueParse(mod_gPL)
X[X<0]<-0
Q4 <-  vennChart(A_all = X$A * 100, B_all = X$B * 100, C_all = X$C * 100,
AandB = X$AB * 100, AandC = X$AC * 100, BandC = X$BC * 100,
lim = L,textadj = c(1.5,0.4), texts = FALSE)
# print the texts separately for more control
Q4$textspos$tpBC[2] <- Q4$textspos$tpBC[2] - 1
plotVennTexts(Q4$textspos, names = c('Env.','Lat.', 'Mon.'), digits = 2,
cex = 1.2, unit = "%")
text(0, -5.8,
paste("Residual: ", as.character(round(X$res * 100, 2)) , "%"),
cex = 1.2)
title("Guild-based \n Plant scale")
par(mfrow = c (1,2))
X <- valueParse(mod_tPL)
Q3 <-  vennChart(A_all = X$A * 100, B_all = X$B * 100, C_all = X$C * 100,
AandB = X$AB * 100, AandC = X$AC * 100, BandC = X$BC * 100,
digits = 2, textadj = c(1.7, 0.4), lim = L,texts = FALSE)
Q3$textspos$tpBC[2] <- Q3$textspos$tpBC[2] - 1
Q3$textspos$tpAB[1] <- Q3$textspos$tpAB[1] + 0.5
Q3$textspos$tpAB[2] <- Q3$textspos$tpAB[2] + 0.5
plotVennTexts(Q3$textspos, names = c('Env.','Lat.', 'Mon.'), digits = 2,
cex = 1.2, unit = "%")
text(0, -5.8,
paste("Residual: ", as.character(round(X$res * 100, 2)) , "%"),
cex = 1.2)
title("Taxon-based \n Plant scale")
X <- valueParse(mod_gPL)
X[X<0]<-0
Q4 <-  vennChart(A_all = X$A * 100, B_all = X$B * 100, C_all = X$C * 100,
AandB = X$AB * 100, AandC = X$AC * 100, BandC = X$BC * 100,
lim = L,textadj = c(1.5,0.4), texts = FALSE)
# print the texts separately for more control
Q4$textspos$tpBC[2] <- Q4$textspos$tpBC[2] - 1
plotVennTexts(Q4$textspos, names = c('Env.','Lat.', 'Mon.'), digits = 2,
cex = 1.2, unit = "%")
text(0, -5.8,
paste("Residual: ", as.character(round(X$res * 100, 2)) , "%"),
cex = 1.2)
title("Guild-based \n Plant scale")
par(mfrow = c (1,2))
X <- valueParse(mod_tPL)
Q3 <-  vennChart(A_all = X$A * 100, B_all = X$B * 100, C_all = X$C * 100,
AandB = X$AB * 100, AandC = X$AC * 100, BandC = X$BC * 100,
digits = 2, textadj = c(1.8, 0.4), lim = L,texts = FALSE)
Q3$textspos$tpBC[2] <- Q3$textspos$tpBC[2] - 1
Q3$textspos$tpAB[1] <- Q3$textspos$tpAB[1] + 0.6
Q3$textspos$tpAB[2] <- Q3$textspos$tpAB[2] + 0.6
plotVennTexts(Q3$textspos, names = c('Env.','Lat.', 'Mon.'), digits = 2,
cex = 1.2, unit = "%")
text(0, -5.8,
paste("Residual: ", as.character(round(X$res * 100, 2)) , "%"),
cex = 1.2)
title("Taxon-based \n Plant scale")
X <- valueParse(mod_gPL)
X[X<0]<-0
Q4 <-  vennChart(A_all = X$A * 100, B_all = X$B * 100, C_all = X$C * 100,
AandB = X$AB * 100, AandC = X$AC * 100, BandC = X$BC * 100,
lim = L,textadj = c(1.7,0.5), texts = FALSE)
# print the texts separately for more control
Q4$textspos$tpBC[2] <- Q4$textspos$tpBC[2] - 1
plotVennTexts(Q4$textspos, names = c('Env.','Lat.', 'Mon.'), digits = 2,
cex = 1.2, unit = "%")
text(0, -5.8,
paste("Residual: ", as.character(round(X$res * 100, 2)) , "%"),
cex = 1.2)
title("Guild-based \n Plant scale")
par(mfrow = c (1,2))
X <- valueParse(mod_tPL)
Q3 <-  vennChart(A_all = X$A * 100, B_all = X$B * 100, C_all = X$C * 100,
AandB = X$AB * 100, AandC = X$AC * 100, BandC = X$BC * 100,
digits = 2, textadj = c(1.8, 0.4), lim = L,texts = FALSE)
Q3$textspos$tpBC[2] <- Q3$textspos$tpBC[2] - 1
Q3$textspos$tpAB[1] <- Q3$textspos$tpAB[1] + 0.6
Q3$textspos$tpAB[2] <- Q3$textspos$tpAB[2] + 0.6
plotVennTexts(Q3$textspos, names = c('Env.','Lat.', 'Mon.'), digits = 2,
cex = 1.2, unit = "%")
text(0, -5.8,
paste("Residual: ", as.character(round(X$res * 100, 2)) , "%"),
cex = 1.2)
title("Taxon-based \n Plant scale")
X <- valueParse(mod_gPL)
X[X<0]<-0
Q4 <-  vennChart(A_all = X$A * 100, B_all = X$B * 100, C_all = X$C * 100,
AandB = X$AB * 100, AandC = X$AC * 100, BandC = X$BC * 100,
lim = L,textadj = c(1.7,0.5), texts = FALSE)
# print the texts separately for more control
Q4$textspos$tpBC[2] <- Q4$textspos$tpBC[2] - 1
plotVennTexts(Q4$textspos, names = c('Env.','Lat.', 'Mon.'), digits = 2,
cex = 1.2, unit = "%")
text(0, -5.8,
paste("Residual: ", as.character(round(X$res * 100, 2)) , "%"),
cex = 1.2)
title("Guild-based \n Plant scale")
par(mfrow = c (1,2))
X <- valueParse(mod_tPL)
Q3 <-  vennChart(A_all = X$A * 100, B_all = X$B * 100, C_all = X$C * 100,
AandB = X$AB * 100, AandC = X$AC * 100, BandC = X$BC * 100,
digits = 2, textadj = c(1.8, 0.4), lim = L,texts = FALSE)
Q3$textspos$tpBC[2] <- Q3$textspos$tpBC[2] - 1
Q3$textspos$tpAB[1] <- Q3$textspos$tpAB[1] + 0.6
Q3$textspos$tpAB[2] <- Q3$textspos$tpAB[2] + 0.6
plotVennTexts(Q3$textspos, names = c('Env.','Lat.', 'Mon.'), digits = 2,
cex = 1.2, unit = "%")
text(0, -5.8,
paste("Residual: ", as.character(round(X$res * 100, 2)) , "%"),
cex = 1.2)
title("Taxon-based \n Plant scale")
X <- valueParse(mod_gPL)
X[X<0]<-0
Q4 <-  vennChart(A_all = X$A * 100, B_all = X$B * 100, C_all = X$C * 100,
AandB = X$AB * 100, AandC = X$AC * 100, BandC = X$BC * 100,
lim = L,textadj = c(1.7,0.5), texts = FALSE)
# print the texts separately for more control
Q4$textspos$tpBC[2] <- Q4$textspos$tpBC[2] - 1
plotVennTexts(Q4$textspos, names = c('Env.','Lat.', 'Mon.'), digits = 2,
cex = 1.2, unit = "%")
text(0, -5.8,
paste("Residual: ", as.character(round(X$res * 100, 2)) , "%"),
cex = 1.2)
title("Guild-based \n Plant scale")
par(mfrow = c (1,2))
X <- valueParse(mod_tST)
L <- list("xlim" = c(-5,5), "ylim" = c(-6, 4))
Q1 <-  vennChart(A_all = X$A * 100, B_all = X$B * 100, C_all = X$C * 100,
AandB = X$AB * 100, AandC = X$AC * 100, BandC = X$BC * 100,
names = c('Env.','Lat.', 'Mon.'),
textadj = c(1.3,0), cex = 1.2, lim = L,
unit = "%", digits = 2)
text(0, -5.8,
paste("Residual: ", as.character(round(X$res * 100, 2)) , "%"),
cex = 1.2)
title("Taxon-based \n Site scale")
X <- valueParse(mod_gST)
X[X<0]<-0
Q2 <-  vennChart(A_all = X$A * 100, B_all = X$B * 100, C_all = X$C * 100,
AandB = X$AB * 100, AandC = X$AC * 100, BandC = X$BC * 100,
names = c('Env.','Lat.', 'Mon.'),
textadj = c(1.3,0.2), cex = 1.2, lim = L,
unit = "%", digits = 2)
text(0, -5.8,
paste("Residual: ", as.character(round(X$res * 100, 2)) , "%"),
cex = 1.2)
title("Guild-based \n Site scale")
